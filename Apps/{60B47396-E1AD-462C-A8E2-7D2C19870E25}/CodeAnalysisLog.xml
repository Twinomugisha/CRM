<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="C:\Users\sapa\AppData\Local\Temp\tmp25CB.tmp.cadir\bin\App_Code.dll">
   <Modules>
    <Module Name="app_code.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="dataaccess" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="31">'dataaccess.dataaccess()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckCard_details(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="165">'dataaccess.CheckCard_details(string, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckUser(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="83">'dataaccess.CheckUser(string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetReportFactoryDamage(System.String,System.DateTime,System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="48">'dataaccess.GetReportFactoryDamage(string, DateTime, DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetTransactions(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="138">'dataaccess.GetTransactions(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterUser(System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="96">'dataaccess.RegisterUser(string, string, string, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#save_invoice(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="123">'dataaccess.save_invoice(string, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveCredit_card(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="151">'dataaccess.SaveCredit_card(string, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveReconciliationQuantityItems(System.String,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Boolean,System.String,System.DateTime)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="67">'dataaccess.SaveReconciliationQuantityItems(string, string, string, decimal, string, string, string, string, string, string, string, string, string, string, DateTime, bool, string, DateTime)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StoreMoney(System.String,System.String,System.String,System.Decimal,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="110">'dataaccess.StoreMoney(string, string, string, decimal, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StorereqMoney(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="d:\NWSC2020\paypal_2\Apps\App_Code\DATA_ACCESS" File="Dataaccess__MASTER.cs" Line="179">'dataaccess.StorereqMoney(string, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReceiptData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ReceiptData'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ReceiptData+GetReceiptDataDataTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2020-02-09 18:14:48Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'ReceiptData.GetReceiptDataDataTable'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240">
   <Name>Implement ISerializable correctly</Name>
   <Description>If a type is assignable to ISerializable, it should implement GetObjectData. For unsealed types, the GetObjectData method should be callable and overridable by derived types.</Description>
   <Resolution Name="Default">Add an implementation of GetObjectData to type {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182342.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
